service: simple-message-board

custom:
  posts: 'posts-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
    stages:
      - ${self:provider.stage}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource:
        - { "Fn::GetAtt": ["PostsDynamoDBTable", "Arn" ] }
  environment:
    POSTS_TABLE: ${self:custom.posts}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /v1/
      - http: ANY /v1/{proxy+}
  getPosts:
    handler: index.handler
    events:
      - http: GET /v1/posts/
  createPosts:
    handler: index.handler
    events:
      - http: POST /v1/posts

resources:
  Resources:
    PostsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: postId
            AttributeType: S
        KeySchema:
          -
            AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.posts}

package: 
  exclude:
    - test
    - .eslintrc
    - .gitignore

plugins:
  - serverless-dynamodb-local
  - serverless-offline
